homeassistant:
  name: Home
  latitude: !secret lat
  longitude: !secret lon
  elevation: 0
  unit_system: metric
  time_zone: Europe/Paris
  country: FR
  customize: !include customize.yaml
  allowlist_external_dirs:
    - /config/www/records
    - /media/frigate
  external_url: !secret external_url
  internal_url: !secret internal_url
  allowlist_external_urls:
    - !secret img_ext
    - !secret img_garage
    - !secret img_salon
    - !secret img_etage
    - !secret doods_cam
  media_dirs:
    media: /config/www/records

group: !include groups.yaml
automation: !include automations.yaml

recorder:
  db_url: !secret mariadb
  auto_purge: true
  purge_keep_days: 10

http:
  ssl_certificate: /ssl/fullchain.pem
  ssl_key: /ssl/privkey.pem

logger:
  default: info

frontend:
  themes: !include_dir_merge_named themes
lovelace:
  mode: yaml
  resources: !include resources.yaml
homekit:
  filter:
    include_domains:
      - light
      - switch
      - sensor

alexa:
  smart_home:

freebox_player:
  remote_code: !secret freebox_remote_code
  host: !secret freebox_host

#Global activation
config:
stream:
system_health:
default_config:
ios:
mobile_app:
ffmpeg:
discovery:
conversation:
logbook:
map:
wake_on_lan:

input_boolean:
  vmc:
    name: VMC status
    initial: off
    icon: mdi:fan
  freebox:

input_text:
  search_spotify:
    name: search_spotify
    initial: Search into spotify

hacs:
  token: !secret hacs_token

matrix:
  homeserver: !secret matrix_url
  username: !secret matrix_user_bot
  password: !secret matrix_password
  rooms:
    - !secret matrix_room
  commands:
    - expression: ha (?P<command>.*)
      name: ha_cmd

sensor:
  - platform: websocket_api
  - platform: authenticated
    exclude:
      - 172.30.32.2
  - platform: template
    sensors:
      temperature_garage:
        value_template: "{{ state_attr('binary_sensor.motion_sensor', 'temperature') }}"
      temperature_ext:
        value_template: "{{ state_attr('binary_sensor.motion_salon', 'temperature') }}"

  - platform: attributes
    friendly_name: "Batteries"
    attribute: battery_level
    unit_of_measurement: "%"
    entities:
      - binary_sensor.capteur_couloire_motion
      - zwave.zipato_unknown_type_0003_id_1083_2

  #  - platform: mqtt
  #    name: "Temperature ESP"
  #    state_topic: "office/sensor1"
  #    unit_of_measurement: "°C"
  #    value_template: "{{ value_json.temperature }}"
  #  - platform: mqtt
  #    name: "Humidite ESP"
  #    state_topic: "office/sensor1"
  #    unit_of_measurement: "%"
  #    value_template: "{{ value_json.humidity }}"
  #  - platform: mqtt
  #    name: "Temperature Simon"
  #    state_topic: "chambre/simon"
  #    unit_of_measurement: "°C"
  #    value_template: "{{ value_json.temperature }}"
  #  - platform: mqtt
  #    name: "Humidite Simon"
  #    state_topic: "chambre/simon"
  #    unit_of_measurement: "%"
  #    value_template: "{{ value_json.humidity }}"

  - platform: folder
    folder: /config/www/records

  - platform: folder
    folder: /media/frigate

  - platform: command_line
    name: frigate size
    command: "du -s /media/frigate"
    unit_of_measurement: "MiB"
    value_template: '{{ value.split("\t" )[0] | multiply(1/1024) | round(2) }}'

  ###### HARDWARE STATISTICS
  - platform: command_line
    name: cpu_temp
    command: "cat /sys/class/thermal/thermal_zone0/temp"
    unit_of_measurement: "°C"
    value_template: "{{ value | multiply(0.001) }}"
  - platform: systemmonitor
    resources:
      - type: disk_free
        arg: /home
      - type: disk_use_percent
        arg: /home
      - type: memory_use_percent
      - type: memory_free
      - type: processor_use

  ###### TOTAL NUMBER OF AUTOMATIONS
  - platform: template
    sensors:
      total_automations:
        friendly_name: "Number of Automations"
        value_template: >
          {%- set domains = ['automation'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

  ###### TOTAL NUMBER OF SENSORS
  - platform: template
    sensors:
      total_sensors:
        friendly_name: "Number of Sensors"
        value_template: >
          {%- set domains = ['sensor'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

  ###### TOTAL NUMBER OF SWITCHES
  - platform: template
    sensors:
      total_switches:
        friendly_name: "Number of Switches"
        value_template: >
          {%- set domains = ['switch'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

  ###### TOTAL NUMBER OF LIGHTS
  - platform: template
    sensors:
      total_lights:
        friendly_name: "Number of Lights"
        value_template: >
          {%- set domains = ['light'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

  ###### TOTAL NUMBER OF SCRIPTS
  - platform: template
    sensors:
      total_scripts:
        friendly_name: "Number of Scripts"
        value_template: >
          {%- set domains = ['script'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

  ###### TOTAL NUMBER OF DEVICES
  - platform: template
    sensors:
      total_devicetrackers:
        friendly_name: "Number of Devices"
        value_template: >
          {%- set domains = ['device_tracker'] -%}
          {%- for domain in domains -%}
            {%- for item in states[domain] -%}
              {% if loop.first %}
                {{loop.length}}
              {% endif %}
            {%- endfor -%}
          {%- endfor -%}

  ###### TOTAL NUMBER OF ZIGBE DEVICES
  - platform: template
    sensors:
      total_zigbee_devices:
        friendly_name: "Number of Zigbee Devices"
        value_template: "32" #todo find real value

  ###### UPTIME
  - platform: uptime
    name: Time Online

media_source:
  media_dirs:
    camera: /www/records

# Enables support for tracking state changes over time
history:
  exclude:
    entities:
      - sensor.yr_symbol
      - remote.harmony_hub
      - binary_sensor.remote_ui
      - sensor.total_automations
      - sensor.total_devicetrackers
      - sensor.total_lights
      - sensor.total_scripts
      - sensor.total_sensors
      - sensor.total_switches
      - sun.sun
      - sensor.last_hallway_detection
      - sensor.netatmo_module_battery
      - sensor.netatmo_module_battery_percent
      - sensor.netatmo_station_wifi
      - zwave.z_wave_me_zme_uzb1_usb_stick
      - zwave.unknown_node_2
      - camera.onvif_flux_etage
      - camera.onvif_flux_garage
      - camera.onvif_flux_salon
      - camera.etage
      - camera.garage
      - camera.salon
      - variable.last_hallway_detection
      - variable.last_garage_detection
      - sensor.netatmo_module_radio
      - sensor.netatmo_module_battery_percent
      - sensor.netatmo_module_battery
      - sensor.netatmo_station_wifi
      - sensor.solar_angle
      - sensor.sunrise
      - sensor.time_online
      - sensor.neo_coolcam_door_window_detector_access_control
      - sensor.neo_coolcam_door_window_detector_access_control_2
      - sensor.neo_coolcam_door_window_detector_access_control_3
      - sensor.shenzhen_neo_electronics_co_ltd_door_window_detector_access_control
      - sensor.shenzhen_neo_electronics_co_ltd_door_window_detector_access_control_2
      - sensor.neo_coolcam_door_window_detector_alarm_level
      - sensor.neo_coolcam_door_window_detector_alarm_level_2
      - sensor.neo_coolcam_door_window_detector_alarm_level_3
      - sensor.shenzhen_neo_electronics_co_ltd_door_window_detector_alarm_level
      - sensor.shenzhen_neo_electronics_co_ltd_door_window_detector_alarm_level_2
      - sensor.neo_coolcam_door_window_detector_alarm_type
      - sensor.neo_coolcam_door_window_detector_alarm_type_2
      - sensor.neo_coolcam_door_window_detector_alarm_type_3
      - sensor.shenzhen_neo_electronics_co_ltd_door_window_detector_alarm_type
      - sensor.shenzhen_neo_electronics_co_ltd_door_window_detector_alarm_type_2
      - sensor.my_computer_cpu_usage
      - sensor.my_computer_hdd_format_c
      - sensor.my_computer_hdd_free_space_c
      - sensor.my_computer_hdd_label_c
      - sensor.my_computer_hdd_total_free_space_c
      - sensor.my_computer_hdd_total_size_c
      - sensor.my_computer_hdd_usage_c
      - sensor.my_computer_hdd_used_space_c
      - sensor.my_computer_ram_usage
    domains:
      - device_tracker
      - automation
      - script

tts:
  - platform: google_translate
    service_name: google_say

alarm_control_panel:
  - platform: manual
    name: Home Alarm
    delay_time: 10
    trigger_time: 4
    disarmed:
      trigger_time: 0
    armed_home:
      arming_time: 0
      delay_time: 0
    armed_away:
      arming_time: 0
      delay_time: 0

aws:
  credentials:
    - name: aws_account
      aws_access_key_id: !secret aws_access_key_id
      aws_secret_access_key: !secret aws_secret_access_key

  notify:
    - service: sns
      region_name: "eu-west-3"
      credential_name: aws_account
      name: notify_sns

notify:
  - name: matrix_notify
    platform: matrix
    default_room: !secret matrix_room

#notify:
#  - name: slack_ha
#    platform: slack
#    api_key: !secret slack_api_key
#    default_channel: "#général"

switch:
  - platform: template
    switches:
      my_computer:
        friendly_name: "My Computer"
        value_template: "{{ is_state('binary_sensor.my_computer_connected', 'on') }}"
        turn_on:
          service: script.my_computer_wake
        turn_off:
          service: script.my_computer_suspend
        icon_template: mdi:laptop

script:
  my_computer_wake:
    alias: "My Computer - Wake On Lan"
    sequence:
      - service: wake_on_lan.send_magic_packet
        data:
          mac: !secret mac_address
